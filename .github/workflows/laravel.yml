name: Laravel

on:
  push:
    branches: [ "deployment" ]
  pull_request:
    branches: [ "deployment" ]

jobs:
  laravel-tests:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: laravel_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: actions/checkout@v4
    - uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"
    - name: Get Composer Cache Directory
      id: composer-cache
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"
    - name: Cache Composer Dependencies
      uses: actions/cache@v2
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    - name: Generate key
      run: php artisan key:generate
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    - name: Configure .env
      run: |
        sed -i 's/DB_CONNECTION=sqlite/DB_CONNECTION=mysql/' .env
        sed -i 's/DB_DATABASE=database\/database.sqlite/DB_DATABASE=laravel_test/' .env
        sed -i 's/DB_USERNAME=null/DB_USERNAME=root/' .env
        sed -i 's/DB_PASSWORD=null/DB_PASSWORD=root/' .env
        sed -i 's/DB_HOST=127.0.0.1/DB_HOST=mysql/' .env
    - name: Create Database
      run: php artisan migrate --force
    - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
      env:
        DB_CONNECTION: mysql
        DB_DATABASE: laravel_test
        DB_USERNAME: root
        DB_PASSWORD: root
        DB_HOST: 127.0.0.1
      run: php artisan test
